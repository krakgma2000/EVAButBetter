{"remainingRequest":"/Users/ttss/respository/nature language/vchat-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ttss/respository/nature language/vchat-master/src/views/chat/private.vue?vue&type=style&index=0&id=402804e6&scoped=true&lang=css&","dependencies":[{"path":"/Users/ttss/respository/nature language/vchat-master/src/views/chat/private.vue","mtime":1677270243840},{"path":"/Users/ttss/respository/nature language/vchat-master/node_modules/css-loader/dist/cjs.js","mtime":1677266736747},{"path":"/Users/ttss/respository/nature language/vchat-master/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1677266736969},{"path":"/Users/ttss/respository/nature language/vchat-master/node_modules/postcss-loader/src/index.js","mtime":1677266736813},{"path":"/Users/ttss/respository/nature language/vchat-master/node_modules/cache-loader/dist/cjs.js","mtime":1677266736571},{"path":"/Users/ttss/respository/nature language/vchat-master/node_modules/vue-loader/lib/index.js","mtime":1677266736893}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uLy4uL2Fzc2V0cy9jc3MvY2hhdC5jc3MiOwo="},{"version":3,"sources":["private.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA","file":"private.vue","sourceRoot":"src/views/chat","sourcesContent":["<template>\n    <div style=\"background-color: #f5f6f7;height: 100vh\">\n        <van-nav-bar style=\"height: 65px\" class=\"chat-header\" :border=false>\n            <template #left>\n                <van-icon @click=\"back\" style=\"transform:rotate(90deg);margin-right: 20px\" color=\"#333333\" name=\"down\"\n                    size=\"20\" />\n                <van-icon name=\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\" size=\"42\" />\n                <div>\n                    <div style=\"margin-left: 8px\"><b>{{ user.nickname }}</b></div>\n                    <div><b style=\"color: green;font-size: 12px;margin-left: 8px\"> Online</b></div>\n                </div>\n            </template>\n            <template #right>\n                <van-icon style=\"transform:rotate(90deg);\" name=\"ellipsis\" color=\"#333333\" size=\"25\" />\n            </template>\n        </van-nav-bar>\n\n        <div class=\"chat-main\" style=\"\">\n            <div v-for=\"(item, index) in msgList\" :key=\"index\">\n                <div v-if=\"item.send_from === myToken\" class=\"message-item right\">\n                    {{ item.content }}\n                </div>\n                <div v-else class=\"message-item\">\n                    {{ item.content }}\n                </div>\n                <div class=\"item-occupy\" />\n            </div>\n        </div>\n\n        <div class=\"chat-bar\">\n            <div class=\"chat-bar-btn\">\n                <van-icon name=\"plus\" />\n            </div>\n            <van-cell-group :border=\"false\" style=\"margin-top: 8px\">\n                <van-field v-model=\"inputMsg\" placeholder=\"Type message...\" />\n            </van-cell-group>\n            <div class=\"chat-bar-btn send\" @click=\"sendMessage\">\n                <svg x=\"1589271304274\" class=\"chat-bar-btn-icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\"\n                    p-id=\"3034\" width=\"30\" height=\"30\">\n                    <path d=\"M85.76 896l895.573333-384-895.573333-384-0.426667 298.666667 640 85.333333-640 85.333333z\"\n                        p-id=\"3035\" fill=\"#ffffff\"></path>\n                </svg>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { getUserById } from \"../../api/user\";\n\nexport default {\n    name: \"index\",\n\n    data() {\n        return {\n            send_to: '',\n            myToken: 'user',\n            inputMsg: '',\n            ws: {},\n            user: {},\n            msgList: [\n                {\n                    send_from: this.myToken,\n                    send_to: this.send_to,\n                    content: '你好呀 !'\n                }\n            ]\n        };\n    },\n\n    mounted() {\n        // this.myToken = localStorage.getItem(\"token\")\n        this.send_to = this.$route.params.id\n        // this.ws = this.$store.state.ws\n        // getUserById(this.send_to).then((res) => {\n        //     if (res.status === true) {\n        //         this.user = res.data.user\n        //     }\n        // })\n        // this.ws.onmessage = (evt) => {\n        //     if (evt.data) {\n        //         const msg = JSON.parse(evt.data)\n        //         this.msgList.push(msg)\n        //     }\n        // }\n    },\n\n    methods: {\n        back() {\n            this.$router.push('/')\n        },\n\n        sendMessage() {\n            // if (this.send_to.valueOf() === this.myToken.valueOf()) {\n            //     this.$notify({\n            //         message: '您不能给自己发送信息哦',\n            //         color: '#FFFFFF',\n            //         background: '#d9455f',\n            //     });\n            // } else {\n            //     if (this.inputMsg.length > 0) {\n            //         const msg = {\n            //             from_name: this.$store.state.user.nickname,\n            //             send_from: this.myToken,\n            //             send_to: this.send_to,\n            //             content: this.inputMsg\n            //         }\n            //         this.ws.send(JSON.stringify(msg))\n            //         this.msgList.push(msg)\n            //         this.inputMsg = ''\n            //     }\n            // }\n            console.log(this.inputMsg);\n            const msg = {\n                from_name: this.$store.state.user.nickname,\n                send_from: this.myToken,\n                send_to: this.send_to,\n                content: this.inputMsg\n            }\n            this.ws.send(JSON.stringify(msg))\n            this.msgList.push(msg)\n            this.inputMsg = ''\n\n        },\n\n    }\n}\n</script>\n\n<style scoped>\n@import \"../../assets/css/chat.css\";\n</style>"]}]}