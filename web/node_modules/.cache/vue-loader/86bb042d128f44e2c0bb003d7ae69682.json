{"remainingRequest":"/Users/ttss/respository/nature language/chatroom/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ttss/respository/nature language/chatroom/web/src/views/index/components/users.vue?vue&type=style&index=0&id=5e522206&scoped=true&lang=css&","dependencies":[{"path":"/Users/ttss/respository/nature language/chatroom/web/src/views/index/components/users.vue","mtime":1597310728000},{"path":"/Users/ttss/respository/nature language/chatroom/web/node_modules/css-loader/dist/cjs.js","mtime":1677266736747},{"path":"/Users/ttss/respository/nature language/chatroom/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1677266736969},{"path":"/Users/ttss/respository/nature language/chatroom/web/node_modules/postcss-loader/src/index.js","mtime":1677266736813},{"path":"/Users/ttss/respository/nature language/chatroom/web/node_modules/cache-loader/dist/cjs.js","mtime":1677266736571},{"path":"/Users/ttss/respository/nature language/chatroom/web/node_modules/vue-loader/lib/index.js","mtime":1677266736893}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiLi4vLi4vLi4vYXNzZXRzL2Nzcy9pbmRleC5jc3MiOwo="},{"version":3,"sources":["users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA","file":"users.vue","sourceRoot":"src/views/index/components","sourcesContent":["<template>\n    <div>\n        <van-nav-bar class=\"index-header\" :border=false>\n            <template #left>\n                <h1>Chats</h1>\n            </template>\n            <template #right>\n                <van-button\n                        @click=\"refresh\"\n                        :round=\"true\"\n                        color=\"linear-gradient(to right, #4bb0ff, #6149f6)\"\n                        size=\"small\">\n                    <van-icon name=\"plus\" style=\"font-weight: 700;\" color=\"#FFFFFF\"/>\n                    <b style=\"color: #d4f3ef;padding-left: 3px;margin-top: -10px\">Refresh</b>\n                </van-button>\n            </template>\n        </van-nav-bar>\n        <van-search\n                style=\"margin-bottom: 30px;margin-top: 8px\"\n                v-model=\"searchValue\"\n                shape=\"round\"\n                placeholder=\"  搜索在线用户 ...\"\n        />\n        <van-list\n                class=\"user-list\"\n                v-model=\"loading\"\n                :finished=\"finished\"\n                finished-text=\"没有更多用户在线了\"\n                @load=\"onLoad\"\n        >\n            <div v-for=\"(item,index) in list\" :key=\"index\" class=\"user-list-item\" @click=\"openChat(item.id)\">\n                <van-icon\n                        style=\"margin-right: 3px;\"\n                        name=\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\"\n                        size=\"50\"/>\n                <div style=\"margin-top: 8px\">\n                    <div v-if=\"item.id === token\" class=\"item-user-nickname\">\n                        我\n                    </div>\n                    <div v-else class=\"item-user-nickname\">{{item.nickname}}</div>\n                    <div class=\"item-user-time\">Monday</div>\n                    <div class=\"item-user-des\">Online</div>\n                </div>\n            </div>\n        </van-list>\n    </div>\n</template>\n\n<script>\n    import {getOnlineUser} from \"../../../api/user\";\n\n    export default {\n        data() {\n            return {\n                list: [],\n                loading: false,\n                finished: false,\n                searchValue: '',\n                token: localStorage.getItem(\"token\")\n            };\n        },\n\n        mounted() {\n        },\n\n        methods: {\n            openChat(id) {\n                this.$router.push(\"/privateChat/\" + id)\n            },\n\n            onLoad() {\n                getOnlineUser().then((res) => {\n                    this.list = res.data.users\n                    setTimeout(() => {\n                        this.finished = true\n                    }, 800)\n                })\n            },\n\n            refresh() {\n                location.reload()\n            }\n        },\n    };\n</script>\n\n<style scoped>\n    @import \"../../../assets/css/index.css\";\n</style>"]}]}