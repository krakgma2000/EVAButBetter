{"remainingRequest":"/Users/ttss/respository/nature language/vchat-master/node_modules/babel-loader/lib/index.js!/Users/ttss/respository/nature language/vchat-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ttss/respository/nature language/vchat-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ttss/respository/nature language/vchat-master/src/views/chat/group.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ttss/respository/nature language/vchat-master/src/views/chat/group.vue","mtime":1597310728000},{"path":"/Users/ttss/respository/nature language/vchat-master/node_modules/cache-loader/dist/cjs.js","mtime":1677266736571},{"path":"/Users/ttss/respository/nature language/vchat-master/node_modules/babel-loader/lib/index.js","mtime":1677266736718},{"path":"/Users/ttss/respository/nature language/vchat-master/node_modules/cache-loader/dist/cjs.js","mtime":1677266736571},{"path":"/Users/ttss/respository/nature language/vchat-master/node_modules/vue-loader/lib/index.js","mtime":1677266736893}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ2V0R3JvdXBCeUlkLCBqb2luR3JvdXAgfSBmcm9tICIuLi8uLi9hcGkvZ3JvdXAiOwppbXBvcnQgeyBnZXRVc2VyQnlJZCB9IGZyb20gIi4uLy4uL2FwaS91c2VyIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJpbmRleCIsCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBncm91cElkOiAnJywKICAgICAgbXlUb2tlbjogJycsCiAgICAgIGlucHV0TXNnOiAnJywKICAgICAgd3M6IHt9LAogICAgICBtZToge30sCiAgICAgIGdyb3VwOiB7fSwKICAgICAgbXNnTGlzdDogW3sKICAgICAgICBmcm9tX25hbWU6ICfnvqTmtojmga8nLAogICAgICAgIHNlbmRfZnJvbTogdGhpcy5teVRva2VuLAogICAgICAgIHNlbmRfdG86IHRoaXMuZ3JvdXBJZCwKICAgICAgICBjb250ZW50OiAn5qyi6L+O5Yqg5YWl5pys576k6IGKICEnCiAgICAgIH1dCiAgICB9OwogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLm15VG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidG9rZW4iKTsKICAgIHRoaXMuZ3JvdXBJZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZDsKICAgIHRoaXMud3MgPSB0aGlzLiRzdG9yZS5zdGF0ZS53czsKICAgIGdldFVzZXJCeUlkKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0b2tlbiIpKS50aGVuKHJlcyA9PiB7CiAgICAgIGlmIChyZXMuc3RhdHVzID09PSB0cnVlKSB7CiAgICAgICAgdGhpcy5tZSA9IHJlcy5kYXRhLnVzZXI7CiAgICAgIH0KICAgIH0pOwogICAgZ2V0R3JvdXBCeUlkKHRoaXMuZ3JvdXBJZCkudGhlbihyZXMgPT4gewogICAgICBpZiAocmVzLnN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICAgIHRoaXMuZ3JvdXAgPSByZXMuZGF0YS5ncm91cDsgLy/liKTmlq3mmK/lkKbkuLrnvqTogYrmiJDlkZgKCiAgICAgICAgaWYgKHJlcy5kYXRhLmpvaW4gPT09IGZhbHNlKSB7CiAgICAgICAgICB0aGlzLiRkaWFsb2cuY29uZmlybSh7CiAgICAgICAgICAgIHRpdGxlOiAn576k5YWs5ZGKJywKICAgICAgICAgICAgbWVzc2FnZTogJ+aCqOi/mOacquWKoOWFpeacrOe+pOiBiu+8jOivt+eCueWHu+ehruiupOWKoOWFpScKICAgICAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgICAgICBqb2luR3JvdXAodGhpcy5ncm91cElkKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgIHRoaXMuZ3JvdXAubnVtYmVyICs9IDE7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICAgICAgdGhpcy4kcm91dGVyLmdvKC0xKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CgogICAgdGhpcy53cy5vbm1lc3NhZ2UgPSBldnQgPT4gewogICAgICBpZiAoZXZ0LmRhdGEpIHsKICAgICAgICBjb25zdCBtc2cgPSBKU09OLnBhcnNlKGV2dC5kYXRhKTsKICAgICAgICB0aGlzLm1zZ0xpc3QucHVzaChtc2cpOwogICAgICAgIGNvbnNvbGUubG9nKG1zZyk7CiAgICAgIH0KICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgYmFjaygpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy8nKTsKICAgIH0sCgogICAgc2VuZE1lc3NhZ2UoKSB7CiAgICAgIGlmICh0aGlzLmlucHV0TXNnLmxlbmd0aCA+IDApIHsKICAgICAgICBjb25zdCBtc2cgPSB7CiAgICAgICAgICBmcm9tX25hbWU6IHRoaXMubWUubmlja25hbWUsCiAgICAgICAgICBzZW5kX2Zyb206IHRoaXMubXlUb2tlbiwKICAgICAgICAgIHNlbmRfdG86IHRoaXMuZ3JvdXBJZCwKICAgICAgICAgIGNvbnRlbnQ6IHRoaXMuaW5wdXRNc2csCiAgICAgICAgICB0eXBlOiAyCiAgICAgICAgfTsKICAgICAgICB0aGlzLndzLnNlbmQoSlNPTi5zdHJpbmdpZnkobXNnKSk7CiAgICAgICAgdGhpcy5tc2dMaXN0LnB1c2gobXNnKTsKICAgICAgICB0aGlzLmlucHV0TXNnID0gJyc7CiAgICAgIH0KICAgIH0KCiAgfQp9Ow=="},{"version":3,"sources":["group.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div style=\"background-color: #f5f6f7;height: 100vh\">\n        <van-nav-bar style=\"height: 65px\" class=\"chat-header\" :border=false>\n            <template #left>\n                <van-icon\n                        @click=\"back\"\n                        style=\"transform:rotate(90deg);margin-right: 20px\"\n                        color=\"#333333\"\n                        name=\"down\"\n                        size=\"20\"/>\n                <van-icon\n                        name=\"https://img.yzcdn.cn/vant/cat.jpeg\"\n                        size=\"42\"/>\n                <div>\n                    <div><b>{{group.name}}</b></div>\n                    <div><b style=\"color: green;font-size: 12px;margin-left: 8px\"> Members ({{group.number}})</b></div>\n                </div>\n            </template>\n            <template #right>\n                <van-icon\n                        style=\"transform:rotate(90deg);\"\n                        name=\"ellipsis\"\n                        color=\"#333333\"\n                        size=\"25\"/>\n            </template>\n        </van-nav-bar>\n\n        <div class=\"chat-main\" style=\"\">\n            <div v-for=\"(item, index) in msgList\" :key=\"index\">\n                <div v-if=\"item.send_from===myToken\" class=\"message-item right\">\n                    {{'我：' + item.content}}\n                </div>\n                <div v-else class=\"message-item\">\n                    {{item.from_name +': '+ item.content}}\n                </div>\n                <div class=\"item-occupy\"/>\n            </div>\n        </div>\n\n        <div class=\"chat-bar\">\n            <div class=\"chat-bar-btn\">\n                <van-icon name=\"plus\"/>\n            </div>\n            <van-cell-group :border=\"false\" style=\"margin-top: 8px\">\n                <van-field v-model=\"inputMsg\" placeholder=\"Type message...\"/>\n            </van-cell-group>\n            <div class=\"chat-bar-btn send\" @click=\"sendMessage\">\n                <svg x=\"1589271304274\" class=\"chat-bar-btn-icon\" viewBox=\"0 0 1024 1024\"\n                     xmlns=\"http://www.w3.org/2000/svg\" p-id=\"3034\" width=\"30\" height=\"30\">\n                    <path d=\"M85.76 896l895.573333-384-895.573333-384-0.426667 298.666667 640 85.333333-640 85.333333z\"\n                          p-id=\"3035\" fill=\"#ffffff\"></path>\n                </svg>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {getGroupById, joinGroup} from \"../../api/group\";\n    import {getUserById} from \"../../api/user\";\n\n    export default {\n        name: \"index\",\n\n        data() {\n            return {\n                groupId: '',\n                myToken: '',\n                inputMsg: '',\n                ws: {},\n                me: {},\n                group: {},\n                msgList: [\n                    {\n                        from_name: '群消息',\n                        send_from: this.myToken,\n                        send_to: this.groupId,\n                        content: '欢迎加入本群聊 !'\n                    }\n                ]\n            };\n        },\n\n        mounted() {\n            this.myToken = localStorage.getItem(\"token\")\n            this.groupId = this.$route.params.id\n            this.ws = this.$store.state.ws\n            getUserById(localStorage.getItem(\"token\")).then((res) => {\n                if (res.status === true) {\n                    this.me = res.data.user\n                }\n            })\n            getGroupById(this.groupId).then((res) => {\n                if (res.status === true) {\n                    this.group = res.data.group\n                    //判断是否为群聊成员\n                    if (res.data.join === false) {\n                        this.$dialog.confirm({\n                            title: '群公告',\n                            message: '您还未加入本群聊，请点击确认加入',\n                        })\n                            .then(() => {\n                                joinGroup(this.groupId).then((res) => {\n                                    if (res.status === true) {\n                                        this.group.number += 1\n                                    }\n                                })\n                            })\n                            .catch(() => {\n                                this.$router.go(-1)\n                            });\n                    }\n                }\n            })\n            this.ws.onmessage = (evt) => {\n                if (evt.data) {\n                    const msg = JSON.parse(evt.data)\n                    this.msgList.push(msg)\n                    console.log(msg)\n                }\n            }\n        },\n\n        methods: {\n            back() {\n                this.$router.push('/')\n            },\n\n            sendMessage() {\n                if (this.inputMsg.length > 0) {\n                    const msg = {\n                        from_name: this.me.nickname,\n                        send_from: this.myToken,\n                        send_to: this.groupId,\n                        content: this.inputMsg,\n                        type: 2\n                    }\n                    this.ws.send(JSON.stringify(msg))\n                    this.msgList.push(msg)\n                    this.inputMsg = ''\n                }\n            },\n\n        }\n    }\n</script>\n\n<style scoped>\n    @import \"../../assets/css/chat.css\";\n</style>"],"sourceRoot":"src/views/chat"}]}